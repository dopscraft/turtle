os.loadAPI("turtle/apis/nav")
os.loadAPI("turtle/apis/inventory")
local turtleNav = nav.Nav()
local turtleInv = inventory.Inventory()

turtle.refuel()

local torch_location = 2

local rows = 30
local cols = 15
local next_turn = 0

local function place_torch()
    turtleNav:down()
    local place = 0
    if turtle.detectDown() then
        place = 1
    end
    turtleNav:up()
	if place then
		local current_slot = turtle.getSelectedSlot()
        turtle.select(torch_location)
        turtle.placeDown()
		turtle.select(current_slot)
    end
end

local function work()
    local cur_x = turtleNav:getX()
    local cur_y = turtleNav:getY()
    while (turtle.detect()) do
        if not turtleInv:isSpaceForItem(0) then
            write("No space for item\n")
            return false
        end
        turtle.dig()
        os.sleep(0.4)
    end
    while (turtle.detectUp()) do
        if not turtleInv:isSpaceForItem(1) then
            write("No space for item\n")
            return false
        end
        turtle.digUp()
        os.sleep(0.4)
    end
    if (turtle.detectDown()) then
        if not turtleInv:isSpaceForItem(-1) then
            write("No space for item\n")
            return false
        end
        turtle.digDown()
    end
    if (cur_x % 5 == 0) and (cur_y % 5 == 0) then
        place_torch()
    end
    return true
end

local function move()
    local cur_x = turtleNav:getX()
    local cur_y = turtleNav:getY()
    if (cur_x >= 0 and cur_x < rows) then
        return turtleNav:forward()
    elseif (cur_y < 0 or cur_y >= cols) then
        write("y is "..cur_y.." ending\n")
        return false
    elseif next_turn == 0 then
        turtleNav:left()
        next_turn = 1
        return true
    elseif next_turn == 1 then
        if turtleNav:forward() then
            turtleNav:left()
            next_turn = 2
            return true
        end
        return false
    elseif next_turn == 2 then
        next_turn = 3
        return turtleNav:forward()
    elseif next_turn == 3 then
        turtleNav:right()
        next_turn = 4
        return true
    elseif next_turn == 4 then
        if turtleNav:forward() then
            turtleNav:right()
            next_turn = 5
            return true
        end
        return false
    else
        next_turn = 0
        return turtleNav:forward()
    end
end

if work() then
    while (move()) do
        if not work() then
            break
        end
    end
end
